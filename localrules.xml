<group name="aws,runtimesecurity,">

 <rule id="100100" level="5" >
    <if_sid>80200</if_sid>
    <field name="aws.eventName" type="pcre2">GetPasswordData</field>
    <description>Credentials access : Attempt to retrieve EC2 credentials</description>
    <mitre>
      <id>T1530</id>
    </mitre>
  </rule>
  <rule id="100101" level="12" frequency="15" timeframe="300">
    <if_matched_sid>100100</if_matched_sid>
    <description>Credentials access : Multiple attempts to retrieve EC2 credentials</description>
    <mitre>
      <id>T1530</id>
    </mitre>
  </rule>

  <rule id="100102" level="12">
    <if_sid>80202</if_sid>
    <field name="aws.eventName" type="pcre2">AuthorizeSecurityGroupIngress</field>
    <field name="aws.requestParameters.cidrIp" type="pcre2">0.0.0.0\/0</field>
    <field name="aws.requestParameters.fromPort" type="pcre2" negate="yes">443|80</field>
    <description>Security group with inbound rules allowing $(aws.requestParameters.cidrIp) on port $(aws.requestParameters.fromPort) detected</description>
    <mitre>
      <id>T1562.007</id>
      <id>T1105</id>
      <id>T1041</id>
    </mitre>
  </rule>

  <rule id="100103" level="12">
    <if_sid>80202</if_sid>
    <field name="aws.eventName" type="pcre2">CreateRole|UpdateAssumeRolePolicy</field>
    <match type="pcre2">sts:AssumeRole</match>
    <description>Possible IAM Role backdooring: IAM role granted from an external account</description>
    <mitre>
      <id>T1098.001</id>
    </mitre>
  </rule>

  <rule id="100104" level="12">
    <if_sid>80200</if_sid>
    <field name="aws.eventName" type="pcre2">PutEventSelectors</field>
    <field name="aws.requestParameters.eventSelectors.includeManagementEvents" type="pcre2">false</field>
    <description>Possible disruption of CloudTrail Logging: Management events logging disabled with an event selector</description>
    <mitre>
      <id>T1562.008</id>
    </mitre>
  </rule>
<rule id="100103" level="3">
  <if_sid>80200</if_sid>
  <description>Create AWS user - Detect creation of a new AWS user.
    A new AWS user has been created
    (requesting user: $(aws.userId), requesting IP: $(aws.sourceIpAddress), AWS region: $(aws.awsRegion),
     new user created: $(aws.requestParameters.userName))</description>
  <field name="aws.eventSource">iam.amazonaws.com</field>
  <field name="aws.eventName">CreateUser</field>
  <mitre>
    <id>T1136.003</id>
  </mitre>
</rule>

<rule id="100104" level="5">
  <if_sid>80200</if_sid>
  <description>Create Group - Detect creation of a new user group.
    A new user group has been created.
    (requesting user: $(aws.userId), requesting IP: $(aws.sourceIpAddress), AWS region: $(aws.awsRegion),
     group name: $(aws.requestParameters.groupName))</description>
  <field name="aws.eventSource">iam.amazonaws.com</field>
  <field name="aws.eventName">CreateGroup</field>
  <mitre>
    <id>T1136.003</id>
  </mitre>
</rule>

<rule id="100105" level="5">
  <if_sid>80200</if_sid>
  <description>Delete Group - Detect deletion of a user group.
    A user group has been deleted.
    (requesting user: $(aws.userId), requesting IP: $(aws.sourceIpAddress), AWS region: $(aws.awsRegion),
     group name: $(aws.requestParameters.groupName))</description>
  <field name="aws.eventSource">iam.amazonaws.com</field>
  <field name="aws.eventName">DeleteGroup</field>
  <mitre>
    <id>T1070.009</id>
  </mitre>
</rule>

<rule id="100106" level="5">
  <if_sid>80200</if_sid>
  <description>ECS Service Created - Detect a new service is created in ECS.
    A new service has been created in ECS
    (requesting user: $(aws.userId), requesting IP: $(aws.sourceIpAddress), AWS region: $(aws.awsRegion),
     cluster: $(aws.requestParameters.cluster), service name: $(aws.requestParameters.serviceName),
     task definition: $(aws.requestParameters.taskDefinition))</description>
  <field name="aws.eventSource">ecs.amazonaws.com</field>
  <field name="aws.eventName">CreateService</field>
  <mitre>
    <id>T1610</id>
  </mitre>
</rule>

<rule id="100107" level="5">
  <if_sid>80200</if_sid>
  <description>ECS Task Run or Started - Detect a new task is started in ECS.
    A new task has been started in ECS
    (requesting user: $(aws.userId), requesting IP: $(aws.sourceIpAddress), AWS region: $(aws.awsRegion),
     cluster: $(aws.requestParameters.cluster), task definition: $(aws.requestParameters.taskDefinition))</description>
  <field name="aws.eventSource">ecs.amazonaws.com</field>
  <field name="aws.eventName">RunTask</field>
  <field name="aws.eventName">StartTask</field>
  <mitre>
    <id>T1610</id>
  </mitre>
</rule>

<rule id="100108" level="5">
  <if_sid>80200</if_sid>
  <description>Create Lambda Function - Detect creation of a Lambda function.
    Lambda function has been created.
    (requesting user: $(aws.userId), requesting IP: $(aws.sourceIpAddress), AWS region: $(aws.awsRegion),
     lambda function: $(aws.requestParameters.functionName))</description>
  <field name="aws.eventSource">lambda.amazonaws.com</field>
  <field name="aws.eventName">CreateFunction20150331</field>
  <mitre>
    <id>T1584.007</id>
  </mitre>
</rule>

<rule id="100109" level="5">
  <if_sid>80200</if_sid>
  <description>Update Lambda Function Code - Detect updates to a Lambda function code.
    The code of a Lambda function has been updated.
    (requesting user: $(aws.userId), requesting IP: $(aws.sourceIpAddress), AWS region: $(aws.awsRegion),
     lambda function: $(aws.requestParameters.functionName))</description>
  <field name="aws.eventSource">lambda.amazonaws.com</field>
  <field name="aws.eventName">UpdateFunctionCode20150331v2</field>
  <mitre>
    <id>T1584.007</id>
  </mitre>
</rule>

<rule id="100110" level="5">
  <if_sid>80200</if_sid>
  <description>Update Lambda Function Configuration - Detect updates to a Lambda function configuration.
    The configuration of a Lambda function has been updated.
    (requesting user: $(aws.userId), requesting IP: $(aws.sourceIpAddress), AWS region: $(aws.awsRegion),
     lambda function: $(aws.requestParameters.functionName))</description>
  <field name="aws.eventSource">lambda.amazonaws.com</field>
  <field name="aws.eventName">UpdateFunctionConfiguration20150331v2</field>
  <mitre>
    <id>T1584.007</id>
  </mitre>
</rule>

<rule id="100111" level="5">
  <if_sid>80200</if_sid>
  <description>Run Instances - Detect launching of instances.
    A number of instances have been launched.
    (requesting user: $(aws.userId), requesting IP: $(aws.sourceIpAddress), AWS region: $(aws.awsRegion),
     availability zone: $(aws.requestParameters.availabilityZone),
     subnet id: $(aws.responseElements.subnetId),
     reservation id: $(aws.responseElements.reservationId))</description>
  <field name="aws.eventSource">ec2.amazonaws.com</field>
  <field name="aws.eventName">RunInstances</field>
  <mitre>
    <id>T1578.002</id>
  </mitre>
</rule>

<rule id="100112" level="5">
  <if_sid>80200</if_sid>
  <description>Run Instances in Non-approved Region - Detect launching of instances in a non-approved region.
    A number of instances have been launched in a non-approved region.
    (requesting user: $(aws.userId), requesting IP: $(aws.sourceIpAddress), AWS region: $(aws.awsRegion),
     availability zone: $(aws.requestParameters.availabilityZone),
     subnet id: $(aws.responseElements.subnetId),
     reservation id: $(aws.responseElements.reservationId),
     image id: $(aws.responseElements.instancesSet.items.0.instanceId))</description>
  <group>aws-cloudtrail</group>
  <field name="aws.eventSource">ec2.amazonaws.com</field>
  <field name="aws.eventName">RunInstances</field>
  <field name="aws.awsRegion" negate="yes">eu-central-1</field>

  <mitre>
    <id>T1535</id>
  </mitre>
</rule>

<rule id="100113" level="12">
  <if_sid>80200</if_sid>
  <description>Delete Bucket Encryption - Detect deleting configuration to use encryption for bucket storage.
    An encryption configuration for a bucket has been deleted.
    (requesting user: $(aws.userId), requesting IP: $(aws.sourceIpAddress), AWS region: $(aws.awsRegion),
     bucket: $(s3.bucket))</description>
  <group>aws-cloudtrail</group>
  <field name="aws.eventSource">s3.amazonaws.com</field>
  <field name="aws.eventName">DeleteBucketEncryption</field>
  <mitre>
    <id>T1485</id>
  </mitre>
</rule>

<rule id="100114" level="12">
  <if_sid>80200</if_sid>
  <description>Delete Bucket Public Access Block - Detect deleting blocking public access to bucket.
    A public access block for a bucket has been deleted.
    (requesting user: $(aws.userId), requesting IP: $(aws.sourceIpAddress), AWS region: $(aws.awsRegion),
     bucket: $(s3.bucket))</description>
  <group>aws-cloudtrail</group>
  <field name="aws.eventSource">s3.amazonaws.com</field>
  <field name="aws.eventName">PutBucketPublicAccessBlock</field>
  <field name="aws.requestParameters.publicAccessBlock" negate="yes">\.+</field>
  <mitre>
    <id>T1133</id>
  </mitre>
</rule>

<rule id="100115" level="5">
  <if_sid>80200</if_sid>
  <description>List Buckets - Detect listing of all S3 buckets.
    A list of all S3 buckets has been requested.
    (requesting user: $(aws.userId), requesting IP: $(aws.sourceIpAddress), AWS region: $(aws.awsRegion),
     host: $(aws.requestParameters.host))</description>
  <field name="aws.eventSource">s3.amazonaws.com</field>
  <field name="aws.eventName">ListBuckets</field>
  <mitre>
    <id>T1087</id>
  </mitre>
</rule>

<rule id="100116" level="5">
  <if_sid>80200</if_sid>
  <description>Put Bucket ACL - Detect setting the permissions on an existing bucket using access control lists.
    The permissions on an existing bucket have been set using access control lists.
    (requesting user: $(aws.userId), requesting IP: $(aws.sourceIpAddress), AWS region: $(aws.awsRegion),
     bucket name: $(s3.bucket))</description>
  <field name="aws.eventSource">s3.amazonaws.com</field>
  <field name="aws.eventName">PutBucketAcl</field>
  <mitre>
    <id>T1098</id>
  </mitre>
</rule>

<rule id="100117" level="5">
  <if_sid>80200</if_sid>
  <description>Put Bucket Policy - Detect applying an Amazon S3 bucket policy to an Amazon S3 bucket.
    An Amazon S3 bucket policy has been applied to an Amazon S3 bucket.
    (requesting user: $(aws.userId), requesting IP: $(aws.sourceIpAddress), AWS region: $(aws.awsRegion),
     bucket name: $(s3.bucket), policy: $(aws.requestParameters.policy))</description>
  <field name="aws.eventSource">s3.amazonaws.com</field>
  <field name="aws.eventName">PutBucketPolicy</field>
  <mitre>
    <id>T1098</id>
  </mitre>
</rule>

<rule id="100118" level="5">
  <if_sid>80200</if_sid>
  <description>CloudTrail Trail Created - Detect creation of a new trail.
    A new trail has been created.
    (requesting user: $(aws.userId), requesting IP: $(aws.sourceIpAddress), AWS region: $(aws.awsRegion),
     trail name: $(aws.requestParameters.name))</description>
  <field name="aws.eventSource">cloudtrail.amazonaws.com</field>
  <field name="aws.eventName">CreateTrail</field>
  <mitre>
    <id>T1136</id>
  </mitre>
</rule>

<rule id="100119" level="5">
  <if_sid>80200</if_sid>
  <description>CloudTrail Logging Disabled - The CloudTrail logging has been disabled, this could be potentially malicious.
    The CloudTrail logging has been disabled.
    (requesting user: $(aws.userId), requesting IP: $(aws.sourceIpAddress), AWS region: $(aws.awsRegion),
     resource name: $(aws.requestParameters.name))</description>
  <field name="aws.eventSource">cloudtrail.amazonaws.com</field>
  <field name="aws.eventName">StopLogging</field>
  <mitre>
    <id>T1136</id>
  </mitre>
</rule>


</group>
